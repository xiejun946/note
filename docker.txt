docker常用 cmd
docker version
docker images
docker search 关键字
docker pull 镜像名
docker load < xx.tar  导入镜像
docker save image_name > xx.tar 导出镜像
docker ps 查看正在工作容器信息
docker ps -a 查看所有容器
docker history
docker inspect 查看详细信息,可以是镜像，可以是容器ID
docker rmi 镜像  删除镜像（镜像要未使用）
docker tag redis:latest aaa:bbb 类似于复制备份了一个镜像
docker start 
docker stop
docker restart
docker rm $(docker ps -aq) 支持命令当参数使用
docker top 容器id  在外部查看容器进程
docker exec -it 31cedb657302 /bin/bash  进入已经开启的容器，推出不会关闭容器 
docker inspect -f "{{.NetworkSettings.IPAddress}}" 31
docker commit 40503ac7cfb4 myos  封装容器为镜像

启动容器        镜像：标签         镜像中命令
docker run -it centos:latest /bin/bash
            -i 交互式
            -t 终端
            -d 后台进程（一般服务）






如果出现容器无网络，ping不同真实机，原因是虚拟机没有打开ipv4地址转发
vim /usr/lib/sysctl.d/00-system.conf
net.ipv4.ip_forward=1
systemctl restart network

即可
启动一个非交互式镜像不加-d，服务会起不来
启动一个交互式镜像用-d启动，启动以后会马上退出

Dockerfile编写
FROM:基础镜像
MAINTAINER:镜像创建者信息
EXPOSE:开放的端口
ENV:设置变量
ADD:复制文件到镜像
RUN:制作镜像时执行的命令,可以有多个
WORKDIR:定义容器默认工作目录
CMD:容器启动时执行的命令,仅可以有一条CM







mkdir oo
cd oo
cp /etc/yum.repos.d/base.repo local.repo
vim Dockerfile
FROM centos:latest
RUN rm -rf /etc/yum.repos.d/*
ADD local.repo /etc/yum.repos.d/local.repo
RUN yum install -y net-tools vim


docker build -t testos . 运行

创建的是镜像

mkdir 02
cd 02
cp /etc/yum.repos.d/base.repo local.repo
vim Dockerfile
FROM myos:latest
CMD ["/usr/bin/python"]
docker build -t myos:python .


mkdir 03

FROM myos
RUN  yum install -y httpd
ADD  httpd.conf /etc/httpd/conf/httpd.conf
WORKDIR /var/www/html
RUN  echo "hello nsd1803" >index.html
EXPOSE 80
MAINTAINER lixin
ENV  EnvironmentFile=/etc/sysconfig/httpd
CMD  ["/usr/sbin/httpd", "-DFOREGROUND"]

docker build -t test:httpd .
docker run -d test:httpd 因为是服务
docker ps
docker inspect 5b 查看IP
curl IP




创建私有仓库
配置文件 /etc/docker/daemon.json
{
  "insecure-registries" : ["192.168.1.10:5000"]
}

完成配置以后重启 docker 服务
systemctl restart docker

启动私有仓库服务
docker run -d -p 5000:5000 registry

打标记
docker tag busybox:latest 192.168.1.10:5000/busybox:latest
docker tag myos:latest 192.168.1.10:5000/myos:latest
docker tag myos:python 192.168.1.10:5000/myos:python
docker tag myos:httpd  192.168.1.10:5000/myos:httpd

上传镜像
docker push 192.168.1.10:5000/busybox:latest
docker push 192.168.1.10:5000/myos:latest
docker push 192.168.1.10:5000/myos:python
docker push 192.168.1.10:5000/myos:httpd

客户机使用私有镜像源
配置 daemon.json
重启服务 systemctl restart docker
启动容器
docker run -it 192.168.1.10:5000/busybox
docker run -it 192.168.1.10:5000/myos
docker run -d 192.168.1.10:5000/myos:httpd

查看私有仓库有什么样的镜像
curl http://192.168.1.10:5000/v2/_catalog
查看私有仓库的镜像有什么样的标签
curl http://192.168.1.10:5000/v2/myos/tags/list
容器持久化
网络印设真实机    /var/webroot和docker内/var/www/html
docker run -d -v /var/webroot:/var/www/html 192.168.1.196:5000/test:httpd




docker network list
创建虚拟交换机
docker network create --driver bridge --subnet 192.168.100.0/24 docker1
指定虚拟交换机创建容器
docker run -it --network docker1 myos



 -p 真实机端口：容器端口  映射  -v 
docker run -d -p 8080:80 -v /opt/a:/var/www/html 192.168.1.196:5000/test:httpd
